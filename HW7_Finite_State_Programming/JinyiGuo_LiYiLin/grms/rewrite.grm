export Cross = "a" (( "b" : "x" ) * | ("c" + : "y" * ) | ( "": "fric")) "a";
export BitFlip1 = Optimize[(("1" : "0")* | ("0" : "1")*)*];
One = "1";
Zero = "0";
Bit = "0" | "1";
Digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
Even = "0" | "2" | "4" | "6" | "8";
Odd = "1" | "3" | "5" | "7" | "9";

EvenBinary = Bit* Zero;
OddBinary = Bit* One;

export BitFlip2 = CDRewrite[BitFlip1,"","", Digit*, 'sim', 'obl'];

export Parity1 = Optimize[(EvenBinary : "0") | (OddBinary : "1")];

export Parity2 = CDRewrite[Parity1, "[BOS]", "[EOS]", Bit*, 'sim', 'obl'];

ReverseParity = Optimize[( Zero Bit* : "0") |( One Bit* : "1")];
export Parity3 = Reverse[ReverseParity];

export UnParity = Invert[Parity2];

export Split = CDRewrite["":" ", Bit, Bit, (Bit | " ")*, 'ltr', 'opt'];

export SplitThree = Split @ Optimize[ Bit+ " " Bit+ " " Bit+];